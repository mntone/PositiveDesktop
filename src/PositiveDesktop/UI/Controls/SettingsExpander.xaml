<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
					xmlns:ctrl="using:PositiveDesktop.UI.Controls"
					xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives">

	<Style x:Key="SettingsExpanderHeaderDownStyle"
		   TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid"
						  BackgroundSizing="{TemplateBinding BackgroundSizing}"
						  BorderThickness="{StaticResource SettingsCardBorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  MinHeight="{TemplateBinding MinHeight}"
						  Padding="{TemplateBinding Padding}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronForeground}" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackground}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="PointerOverOff" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronPressedForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="PressedOff" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackgroundPressed}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrushPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="NormalOn" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackground}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="PointerOverOn" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderChevronPressedForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="PressedOn" />
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource SettingsCardBackgroundPressed}" />
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource SettingsCardBorderBrushPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Foreground"
												Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										<Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)"
												Value="NormalOn" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="IndeterminatePointerOver" />
								<VisualState x:Name="IndeterminatePressed" />
								<VisualState x:Name="IndeterminateDisabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.BackgroundTransition>
							<BrushTransition Duration="0:0:0.083" />
						</Grid.BackgroundTransition>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Foreground="{TemplateBinding Foreground}" />

						<ContentControl x:Name="ExpandCollapseChevronBorder"
										Grid.Column="1"
										CornerRadius="{StaticResource ControlCornerRadius}"
										HorizontalAlignment="Right"
										HorizontalContentAlignment="Center"
										IsTabStop="False"
										Margin="12,0,-4,0"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<AnimatedIcon x:Name="ExpandCollapseChevron"
										  AnimatedIcon.State="NormalOff"
										  Height="16"
										  HorizontalAlignment="Center"
										  RenderTransformOrigin=".5,.5"
										  Width="16"
										  VerticalAlignment="Center">
								<AnimatedIcon.FallbackIconSource>
									<FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}"
													FontSize="12"
													Glyph="{StaticResource ExpanderChevronDownGlyph}"
													IsTextScaleFactorEnabled="False" />
								</AnimatedIcon.FallbackIconSource>
								<animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
							</AnimatedIcon>
						</ContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultSettingsExpanderStyle"
		   TargetType="ctrl:SettingsExpander">
		<Setter Property="Background"
				Value="{ThemeResource SettingsCardBackground}" />
		<Setter Property="BackgroundSizing"
				Value="InnerBorderEdge" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SettingsCardBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource SettingsCardBorderThickness}" />
		<Setter Property="CornerRadius"
				Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="FocusVisualMargin"
				Value="-3" />
		<Setter Property="FontFamily"
				Value="{StaticResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource ControlContentThemeFontSize}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="Foreground"
				Value="{ThemeResource SettingsCardForeground}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="MinHeight"
				Value="{StaticResource SettingsCardMinHeight}" />
		<Setter Property="MaxWidth"
				Value="{StaticResource SettingsCardMaxWidth}" />
		<Setter Property="MinWidth"
				Value="{StaticResource SettingsCardMinWidth}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Padding"
				Value="{StaticResource SettingsCardPadding}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ctrl:SettingsExpander">
					<Grid MaxWidth="{TemplateBinding MaxWidth}"
						  MinHeight="{TemplateBinding MinWidth}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="HeaderIconPresenter.Foreground"
												Value="{ThemeResource SettingsCardForegroundPointerOver}" />
										<Setter Target="Header.Foreground"
												Value="{ThemeResource SettingsCardForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandStates">
								<VisualState x:Name="ExpandUp">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.CornerRadius"
												Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
										<Setter Target="ExpanderContent.Visibility"
												Value="Visible" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource TemplatedParent}}" />
											<SplineDoubleKeyFrame KeySpline="0,0,0,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapseDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.2"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="0" />
											<SplineDoubleKeyFrame KeySpline="1,1,0,1"
																  KeyTime="0:0:0.167"
																  Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource TemplatedParent}}" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ExpandDown">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.CornerRadius"
												Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
										<Setter Target="ExpanderContent.Visibility"
												Value="Visible" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource TemplatedParent}}" />
											<SplineDoubleKeyFrame KeySpline="0,0,0,1"
																  KeyTime="0:0:0.333"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapseUp">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.167"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="0" />
											<SplineDoubleKeyFrame KeySpline="1,1,0,1"
																  KeyTime="0:0:0.167"
																  Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource TemplatedParent}}" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandDirectionStates">
								<VisualState x:Name="Down" />
								<VisualState x:Name="Up">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.Style"
												Value="{StaticResource ExpanderHeaderUpStyle}" />
										<Setter Target="ExpanderHeader.(Grid.Row)"
												Value="1" />
										<Setter Target="ExpanderContentClip.(Grid.Row)"
												Value="0" />
										<Setter Target="Row0.Height"
												Value="*" />
										<Setter Target="Row1.Height"
												Value="Auto" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="Row0"
										   Height="Auto" />
							<RowDefinition x:Name="Row1"
										   Height="*" />
						</Grid.RowDefinitions>

						<ToggleButton x:Name="ExpanderHeader"
									  Background="{TemplateBinding Background}"
									  BackgroundSizing="{TemplateBinding BackgroundSizing}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  CornerRadius="{TemplateBinding CornerRadius}"
									  HorizontalAlignment="Stretch"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  IsEnabled="{TemplateBinding IsEnabled}"
									  IsTabStop="True"
									  MinHeight="{TemplateBinding MinHeight}"
									  Padding="{TemplateBinding Padding}"
									  Style="{StaticResource SettingsExpanderHeaderDownStyle}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"
													  MinWidth="{StaticResource SettingsCardLeftIndention}" />
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Viewbox x:Name="HeaderIcon"
										 Height="{StaticResource SettingsCardHeaderIconMaxSize}"
										 Margin="{StaticResource SettingsCardHeaderIconMargin}"
										 StretchDirection="DownOnly"
										 Width="{StaticResource SettingsCardHeaderIconMaxSize}">
									<ContentPresenter x:Name="HeaderIconPresenter"
													  Content="{TemplateBinding HeaderIcon}"
													  HighContrastAdjustment="None"
													  IsTextScaleFactorEnabled="False" />
								</Viewbox>

								<StackPanel Grid.Column="1"
											Margin="0,0,16,0"
											VerticalAlignment="Center">
									<ContentPresenter x:Name="Header"
													  Content="{TemplateBinding Header}"
													  Foreground="{TemplateBinding Foreground}"
													  TextWrapping="Wrap" />
									<ContentPresenter x:Name="Description"
													  Content="{TemplateBinding Description}"
													  FontSize="{StaticResource SettingsCardDescriptionFontSize}"
													  Foreground="{ThemeResource TextFillColorSecondaryBrush}"
													  TextWrapping="Wrap" />
								</StackPanel>

								<ContentPresenter x:Name="Content"
												  Grid.Column="2"
												  Content="{TemplateBinding Content}"
												  HorizontalAlignment="Right"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="Center"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</ToggleButton>

						<Border x:Name="ExpanderContentClip"
								Grid.Row="1"
								VerticalAlignment="Top">
							<Border x:Name="ExpanderContent"
									Visibility="Collapsed">
								<Border.RenderTransform>
									<CompositeTransform TranslateY="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource TemplatedParent}}" />
								</Border.RenderTransform>
								<ContentPresenter Content="{TemplateBinding ExpanderContent}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" VerticalContentAlignment="Center" />
							</Border>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ctrl:SettingsExpander"
		   BasedOn="{StaticResource DefaultSettingsExpanderStyle}" />
</ResourceDictionary>
